[metadata]
name = {{ cookiecutter.project_slug }}

author = {{ cookiecutter.full_name.replace("\"", "\\\"") }}
author_email = {{ cookiecutter.email }}
maintainer = {{ cookiecutter.full_name.replace("\"", "\\\"") }}
maintainer_email = {{ cookiecutter.email }}

# keep in sync with {{ cookiecutter.project_slug }}/_version.py
version = 0.1.0

description-file = README.md
description = {{ cookiecutter.project_short_description.replace("\'", "\\\'") }}'
long_description = file: README.md
long_description_content_type = text/markdown
keywords = utility,

platforms = Linux

url =
download_url =

license = {{ cookiecutter.open_source_license }}"

# https://pypi.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 1 - Planning
    Environment :: Console
    Intended Audience :: Developers
    Natural Language :: English
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8

[options]
zip_safe = false
packages = find:
python_requires = >= 3.0

[options.entry_points]
console_scripts =
    {{ cookiecutter.project_slug }} = {{ cookiecutter.project_slug }}.cli:entry_point

[tool:pytest]
addopts = --doctest-modules --mccabe --cov=./{{ cookiecutter.project_slug }} --cov-append --cov-report html:tests/reports/coverage-html --cov-report xml:tests/reports/coverage.xml --flake8 --ignore=docs/ --durations=3
doctest_encoding = utf-8
mccabe-complexity=10

[pydocstyle]
ignore = D104, D105, D107, D301, D413, D203, D212, D100
match_dir = {{ cookiecutter.project_slug }}

[isort]
import_heading_stdlib=Core Library modules
import_heading_thirdparty=Third party modules
import_heading_firstparty=First party modules
import_heading_localfolder=Local modules
include_trailing_comma=True
indent='    '
known_third_party = click,pytest,setuptools
length_sort=0
line_length=80
multi_line_output=3
